services:
  nginx:
    build: requirements/nginx
#    image: nginx
    ports:
      - "443:443"
    volumes:
      - wordpress:/var/www/nginx
      - ${NGINX_SSL}:/etc/ssl/certs
      - ${NGINX_CONF}:/etc/nginx/http.d #dockerfile
#      - ${NGINX_CONF}:/etc/nginx/conf.d #stable
    networks:
      - lan
    depends_on:
      - wordpress
    restart: on-failure

  wordpress:
    build: requirements/wordpress
#    image: wordpress:6.1.1-fpm-alpine
    volumes:
      - ${VOLUME_WP}:/var/www/html1 #TODO DEBUG
      - wordpress:/var/www/html
#      - ${WP_CONF}/wp-config.php:/var/www/html/wp-config.php
    environment:
      WORDPRESS_DB_HOST: ${WP_DB_HOST}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_USER_PWD}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_TABLE_PREFIX: ${WP_TABLE_PREFIX}
      WORDPRESS_ADM_USER: ${WP_ADM_USER}
      WORDPRESS_ADM_PASSWORD: ${WP_ADM_PASSWORD}
      WORDPRESS_URL: ${WP_URL}
      WORDPRESS_TITLE: ${WP_TITLE}
    networks:
      - lan
    depends_on:
      - mariadb
    restart: on-failure
    command: tail -f /dev/null

  mariadb:
    image: mariadb
    volumes:
      - ${VOLUME_DB}:/var/lib/mysql #TODO DEBUG
      - db:/var/lib/mysql
    expose:
      - ${DB_PORT}
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PWD}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_USER_PWD}
#      MARIADB_DATABASE: ${DB_NAME}
      MYSQL_TCP_PORT: ${DB_PORT}
    networks:
      - lan
    restart: on-failure

  adminer:
    image: adminer
    ports:
      - "8082:8080"
    networks:
      - lan
    restart: on-failure

volumes:
  wordpress:
  db:

networks:
  lan:
